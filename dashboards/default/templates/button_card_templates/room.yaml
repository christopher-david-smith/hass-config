room:
  triggers_update: all
  variables:
    highlight: false
    entities: []
    _enabled_entity_icons: >
      [[[
        return function(variables) {

          if(!variables.entities) {
            return [];
          }

          var icons = [];
          for (const [key, entities] of Object.entries(variables.entities)) {

            // Lights
            if (key == 'lights' && entities) {
              for (const entity in entities) {
                if (states[entities[entity]]) {
                  if (states[entities[entity]].state == 'on') {
                    icons.push('mdi:lightbulb');
                    break;
                  }
                }
              }

            // Media
            } else if (key == 'media') {
              for (const entity in entities) {
                if (states[entities[entity]]) {
                  if (['on', 'playing'].includes(states[entities[entity]].state)) {
                    icons.push('mdi:radio');
                    break;
                  }
                }
              }

            // Climate
            } else if (key == 'climate') {
              for (const entity in entities) {
                if (states[entities[entity]]) {
                  if (states[entities[entity]].attributes['hvac_action'] == 'heating') {
                    icons.push('mdi:fire');
                    break;
                  }
                }
              }

            // Other
            } else {
              for (const item in entities) {
                for (const entity in entities[item].entities) {
                  if (states[entities[item].entities[entity]]) {
                    if (states[entities[item].entities[entity]].state == 'on') {
                      icons.push(entities[item].icon);
                      break;
                    }
                  }
                }
              }
            }

          }

          return icons;

        }
      ]]]

  size: 20px
  show_state: true
  show_label: true
  styles:
    grid:
      - grid-template-areas: |
          "icons temperature temperature"
          "l l l"
          "n n i"
      - grid-template-columns: 1fr 1fr min-content
    card:
      - padding: 0
      - background: >
          [[[
          if(variables.highlight) {
            return 'var(--primary-color)';
          }
          ]]]
    name:
      - font-size: var(--body-font-size)
      - padding: 4px 4px 12px 12px
      - white-space: nowrap
      - text-align: left
      - justify-self: start
      - align-self: end
    img_cell:
      - align-self: end
      - text-align: right
      - padding: 4px 8px 8px 8px
      - height: 28px
    custom_fields:
      icons:
        - height: 20px
        - justify-self: start
        - padding: 8px
        - color: >
            [[[
            if(variables.highlight) {
              return 'white';
            } else {
              return 'var(--accent-color)';
            }
            ]]]
      temperature:
        - font-size: 0.8rem
        - justify-self: end
        - text-align: right
        - padding: 8px
  custom_fields:
    icons: > 
      [[[
        var enabled = variables._enabled_entity_icons(variables);
        var icons = [];
        for (const icon of enabled) {
          icons.push(`<ha-icon icon="${icon}" style="width: 15px"></ha-icon>`);
        }
        return icons.join(" ");
      ]]]

    temperature: >
      [[[
        if(variables.temperature) {
          return states[variables.temperature].state.split('.')[0] + 'Â°C';
        }
      ]]]
